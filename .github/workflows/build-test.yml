name: Build test

env:
    DNF_PKGS: |
        xorriso
        rpm
        limine
        systemd
        btrfs-progs
        e2fsprogs
        xfsprogs
        dosfstools
        grub2
        parted
        gdisk
        util-linux-core
        systemd-container
        grub2-efi
        uboot-images-armv8
        uboot-tools
        rustc
        qemu-user-static-aarch64
        qemu-user-binfmt
        qemu-kvm
        qemu-img
        cargo
        systemd-devel
        mkpasswd
        clang-devel
        moby-engine
        squashfs-tools
        erofs-utils
        grub2-tools
        grub2-tools-extra
        isomd5sum
        dnf5
        podman

on:
    push:

jobs:
    # Build docker image for the rest of the tests
    build-environment:
        runs-on: ubuntu-latest
        permissions:
            packages: write
        steps:
            - uses: actions/checkout@v4
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build OCI test cache
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: scripts/test-env.Dockerfile
                  push: true
                  tags: ghcr.io/fyralabs/katsu-cache:${{ github.ref_name || 'latest' }}

    image-arm:
        needs: build-environment
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/fyralabs/katsu-cache:${{ github.ref_name || 'latest' }}
            # Pass /dev from host to container
            # Very hacky, but it works
            # Microsoft/Github, if you're reading this,
            # I'm sorry.
            options: --privileged -v /dev:/dev

        steps:
            - uses: actions/checkout@v4
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Run test
              run: |
                  export PATH=$HOME/.cargo/bin:$PATH
                  export KATSU_KEEP_CHROOT=1
                  pushd tests/ng
                  echo "COLORBT_SHOW_HIDDEN=1" >> .env
                  echo "KATSU_LOG=trace" >> .env
                  katsu -o disk-image katsu-arm.yaml 2>&1
                  zstd -19 katsu-work/image/katsu.img -c > katsu-work/image/katsu-arm.raw.zstd
                  popd

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: image-arm
                  path: tests/ng/katsu-work/image/*.raw.zstd

    bios-x86_64:
        needs: build-environment
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/fyralabs/katsu-cache:${{ github.ref_name || 'latest' }}
            # Pass /dev from host to container
            # Very hacky, but it works
            # Microsoft/Github, if you're reading this,
            # I'm sorry.
            options: --privileged -v /dev:/dev

        steps:
            - uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Run test
              run: |
                  export PATH=$HOME/.cargo/bin:$PATH
                  export KATSU_KEEP_CHROOT=1
                  pushd tests/ng
                  echo "COLORBT_SHOW_HIDDEN=1" >> .env
                  echo "KATSU_LOG=trace" >> .env
                  katsu -o disk-image katsu-bios.yaml 2>&1
                  zstd -19 katsu-work/image/katsu.img -c > katsu-work/image/katsu.raw.zstd
                  popd

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: bios-x86_64
                  path: tests/ng/katsu-work/image/*.raw.zstd

    image-x86_64:
        needs: build-environment
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/fyralabs/katsu-cache:${{ github.ref_name || 'latest' }}
            # Pass /dev from host to container
            # Very hacky, but it works
            # Microsoft/Github, if you're reading this,
            # I'm sorry.
            options: --privileged -v /dev:/dev

        steps:
            - uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Run test
              run: |
                  export PATH=$HOME/.cargo/bin:$PATH
                  export KATSU_KEEP_CHROOT=1
                  pushd tests/ng
                  echo "COLORBT_SHOW_HIDDEN=1" >> .env
                  echo "KATSU_LOG=trace" >> .env
                  katsu -o disk-image katsu.yaml 2>&1
                  zstd -19 katsu-work/image/katsu.img -c > katsu-work/image/katsu.raw.zstd
                  popd

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: image-x86_64
                  path: tests/ng/katsu-work/image/*.raw.zstd

    iso-x86_64:
        needs: build-environment
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/fyralabs/katsu-cache:${{ github.ref_name || 'latest' }}
            # Pass /dev from host to container
            # Very hacky, but it works
            # Microsoft/Github, if you're reading this,
            # I'm sorry.
            options: --privileged -v /dev:/dev

        steps:
            - uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Run test
              run: |
                  export PATH=$HOME/.cargo/bin:$PATH
                  export KATSU_KEEP_CHROOT=1
                  pushd tests/ng
                  echo "COLORBT_SHOW_HIDDEN=1" >> .env
                  echo "KATSU_LOG=trace" >> .env
                  katsu -o iso katsu-iso.yaml 2>&1
                  mv out.iso katsu-work/image/katsu.iso
                  popd

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: iso-x86_64
                  path: tests/ng/katsu-work/image/katsu.iso

    iso-bootc-x86_64:
        needs: build-environment
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/fyralabs/katsu-cache:${{ github.ref_name || 'latest' }}
            # Pass /dev from host to container
            # Very hacky, but it works
            # Microsoft/Github, if you're reading this,
            # I'm sorry.
            options: --privileged -v /dev:/dev

        steps:
            - uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Run test
              run: |
                  export PATH=$HOME/.cargo/bin:$PATH
                  export KATSU_KEEP_CHROOT=1
                  pushd tests/ng
                  echo "COLORBT_SHOW_HIDDEN=1" >> .env
                  echo "KATSU_LOG=trace" >> .env
                  katsu -o iso bootc/katsu-iso-bootc.yaml 2>&1
                  mv out.iso katsu-work/image/katsu.iso
                  popd

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: iso-bootc-x86_64
                  path: tests/ng/katsu-work/image/katsu.iso

    iso-refind-x86_64:
        needs: build-environment
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/fyralabs/katsu-cache:${{ github.ref_name || 'latest' }}
            # Pass /dev from host to container
            # Very hacky, but it works
            # Microsoft/Github, if you're reading this,
            # I'm sorry.
            options: --privileged -v /dev:/dev

        steps:
            - uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Run test
              run: |
                  export PATH=$HOME/.cargo/bin:$PATH
                  export KATSU_KEEP_CHROOT=1
                  pushd tests/ng
                  echo "COLORBT_SHOW_HIDDEN=1" >> .env
                  echo "KATSU_LOG=trace" >> .env
                  katsu -o iso katsu-iso-refind.yaml 2>&1
                  mv out.iso katsu-work/image/katsu.iso
                  popd

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: iso-refind-x86_64
                  path: tests/ng/katsu-work/image/katsu.iso

    iso-limine-x86_64:
        needs: build-environment
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/fyralabs/katsu-cache:${{ github.ref_name || 'latest' }}
            # Pass /dev from host to container
            # Very hacky, but it works
            # Microsoft/Github, if you're reading this,
            # I'm sorry.
            options: --privileged -v /dev:/dev

        steps:
            - uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Run test
              run: |
                  export PATH=$HOME/.cargo/bin:$PATH
                  export KATSU_KEEP_CHROOT=1
                  pushd tests/ng
                  echo "COLORBT_SHOW_HIDDEN=1" >> .env
                  echo "KATSU_LOG=trace" >> .env
                  katsu -o iso katsu-iso-limine.yaml 2>&1
                  mv out.iso katsu-work/image/katsu.iso
                  popd

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: iso-limine-x86_64
                  path: tests/ng/katsu-work/image/katsu.iso

    fs-test-x86_64:
        needs: build-environment
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/fyralabs/katsu-cache:${{ github.ref_name || 'latest' }}
            # Pass /dev from host to container
            # Very hacky, but it works
            # Microsoft/Github, if you're reading this,
            # I'm sorry.
            options: --privileged -v /dev:/dev

        steps:
            - uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Run test
              run: |
                  export PATH=$HOME/.cargo/bin:$PATH
                  export KATSU_KEEP_CHROOT=1
                  pushd tests/ng
                  echo "COLORBT_SHOW_HIDDEN=1" >> .env
                  echo "KATSU_LOG=trace" >> .env
                  katsu -o folder katsu-script-test.yaml 2>&1
                  tar -cJf katsu-work/chroot.tar.xz katsu-work/chroot
                  popd

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: fs-test-x86_64
                  path: tests/ng/katsu-work/chroot.tar.xz
